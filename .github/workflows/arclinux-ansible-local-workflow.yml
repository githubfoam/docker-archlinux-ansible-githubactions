name: "archlinux ansible local CI workflow"


on:
  push:
    branches: [ main ]
  schedule:
      - cron:  '0 0 1 * *' ##execution of a task in the first minute of the month 

jobs:

  ubuntu-latest-job:
    name: "docker archlinux ansible ubuntu 20.04"
    runs-on: ubuntu-latest
    env:
      distribution: "archlinux" #https://hub.docker.com/_/archlinux
      version: "latest"
      name: "archlinux:ansible"
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: |
        hostnamectl status
        lsb_release -a
        lsb_release -d
        cat /etc/lsb-release
        cat /etc/issue
        cat /etc/os-release
        sudo apt-get install -y neofetch && neofetch   
    - name: "docker pull archlinux"
      run: sudo docker pull ${distribution}:${version}  && sudo docker image ls  
    - name: "docker build archlinux"
      run: |
        # destroyed afterwards (use --rm )
        # all subsequent Dockerfile commands generate new images and the cache is not used
        sudo docker build --no-cache --rm  -t archlinux:ansible . --file dockerfiles/Dockerfile.archlinux 
        docker image ls
        docker image history archlinux:ansible
        docker system df -v               
        docker image inspect archlinux:ansible
        # sudo docker run -e ANSIBLE_FORCE_COLOR=1 --privileged --volume="${PWD}":/home/ansible:ro ${name} ansible-playbook -vvv /home/ansible/playbook.yml --syntax-check
        # sudo docker run -e ANSIBLE_FORCE_COLOR=1 --privileged --volume="${PWD}":/home/ansible:ro ${name} ansible-playbook -vvv /home/ansible/playbook.yml --check #dry-run
        # sudo docker run -e ANSIBLE_FORCE_COLOR=1 --privileged --volume="${PWD}":/home/ansible:ro ${name} ansible-playbook -vvv /home/ansible/playbook.yml
        sudo docker run -e ANSIBLE_FORCE_COLOR=1 --privileged --volume="${PWD}":/home/ansible:ro ${name} ansible-playbook -vvv /home/ansible/playbooks/playbook-archlinux.yml
 
   